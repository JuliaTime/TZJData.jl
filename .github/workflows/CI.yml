name: CI
on:
  pull_request:
  push:
    branches:
      - main
    tags: ["*"]
concurrency:
  # Skip intermediate builds: on all builds except on the "main" branch.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref == 'refs/heads/main' && github.run_number || 0 }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  prerelease:
    runs-on: ubuntu-latest
    outputs:
      key: ${{ steps.key.outputs.key }}
      tarball_filename: ${{ steps.key.outputs.tarball_filename }}
      content_hash: ${{ steps.key.outputs.content_hash }}
    steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            modified_artifacts_toml:
              - Artifacts.toml
      - uses: actions/checkout@v4
        if: ${{ steps.filter.outputs.modified_artifacts_toml == 'true' }}
      - name: Check for unpublished artifact
        if: ${{ steps.filter.outputs.modified_artifacts_toml == 'true' }}
        id: key
        shell: julia --color=yes {0}
        run: |
          include(joinpath(pwd(), "gen", "artifacts.jl"))
          (; key, tarball_filename, content_hash) = gh_artifact()
          open(ENV["GITHUB_OUTPUT"], "a") do io
              println(io, "key=$key")
              println(io, "tarball_filename=$tarball_filename")
              println(io, "content_hash=$content_hash")
          end

  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    needs: prerelease
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.version == 'nightly' }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.6"  # LTS / Oldest supported version
          - "1"    # Latest release
          - "nightly"
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Allows checkout of Artifacts.toml from base ref
      - uses: dawidd6/action-download-artifact@v3
        if: ${{ needs.prerelease.outputs.key }}
        id: action-artifact
        with:
          workflow: Build.yaml
          name: ${{ needs.prerelease.outputs.key }}
      - name: Clear cached Overrides.toml
        if: ${{ !needs.prerelease.outputs.key }}
        run: rm -f ~/.julia/artifacts/Overrides.toml
      - run: |
          set -x
          # A valid Artifacts.toml file is required: Pkg.jl issue #2662
          mv Artifacts.toml NewArtifacts.toml
          git checkout origin/${{ github.base_ref }} -- Artifacts.toml
          mkdir prerelease
          tar xvf ${{ needs.prerelease.outputs.tarball_filename }} -C ~/.julia/artifacts/${{ needs.prerelease.outputs.content_hash }}
          echo "TARBALL_PATH=${{ needs.prerelease.outputs.tarball_filename }}" | tee -a "$GITHUB_ENV"

          cat > ~/.julia/artifacts/Overrides.toml <<EOF
          [dc5dba14-91b3-4cab-a142-028a31da12f7]
          tzjdata = "${{ needs.prerelease.outputs.content_hash }}"
          EOF
      - run: |
          set -x
          cat ~/.julia/artifacts/Overrides.toml
          cat Artifacts.toml
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
